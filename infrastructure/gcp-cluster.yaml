---
## Cluster configs

kind: Cluster
apiVersion: cluster.x-k8s.io/v1beta1
metadata:
  name: ${CLUSTER_NAME}
spec:
  clusterNetwork:
    pods:
      cidrBlocks: ["192.168.0.0/16"]
  infrastructureRef:
    apiVersion: infrastructure.cluster.x-k8s.io/v1beta1
    kind: GCPCluster
    name: ${CLUSTER_NAME}
  controlPlaneRef:
    kind: TalosControlPlane
    apiVersion: controlplane.cluster.x-k8s.io/v1alpha3
    name: ${CLUSTER_NAME}-controlplane
---
kind: GCPCluster
apiVersion: infrastructure.cluster.x-k8s.io/v1beta1
metadata:
  name: ${CLUSTER_NAME}
spec:
  project: ${GCP_PROJECT}
  region: ${GCP_REGION}
  network:
    name: ${GCP_NETWORK}
---
## Control plane configs

kind: TalosControlPlane
apiVersion: controlplane.cluster.x-k8s.io/v1alpha3
metadata:
  name: ${CLUSTER_NAME}-controlplane
spec:
  version: v${KUBERNETES_VERSION}
  replicas: ${CONTROL_PLANE_MACHINE_COUNT}
  infrastructureTemplate:
    kind: GCPMachineTemplate
    apiVersion: infrastructure.cluster.x-k8s.io/v1beta1
    name: ${CLUSTER_NAME}-controlplane
  controlPlaneConfig:
    controlplane:
      generateType: controlplane
      talosVersion: ${TALOS_VERSION}
---
kind: GCPMachineTemplate
apiVersion: infrastructure.cluster.x-k8s.io/v1beta1
metadata:
  name: ${CLUSTER_NAME}-controlplane
spec:
  template:
    spec:
      instanceType: ${GCP_CONTROL_PLANE_MACHINE_TYPE}
      image: ${GCP_CONTROL_PLANE_IMAGE_ID}
      publicIP: true
      rootDeviceSize: ${GCP_CONTROL_PLANE_VOL_SIZE}
      serviceAccounts:
        email: ${GCP_VM_SVC_ACCOUNT}
        scopes:
          - "https://www.googleapis.com/auth/compute"
---
## Worker configs

kind: MachinePool
apiVersion: cluster.x-k8s.io/v1beta1
metadata:
  labels:
    cluster.x-k8s.io/cluster-name: ${CLUSTER_NAME}
    nodepool: nodepool-a
  name: ${CLUSTER_NAME}-workers
spec:
  clusterName: ${CLUSTER_NAME}
  replicas: ${WORKER_MACHINE_COUNT}
  selector:
    matchLabels:
      cluster.x-k8s.io/cluster-name: ${CLUSTER_NAME}
      nodepool: nodepool-a
  template:
    metadata:
      labels:
        cluster.x-k8s.io/cluster-name: ${CLUSTER_NAME}
        nodepool: nodepool-a
    spec:
      clusterName: ${CLUSTER_NAME}
      failureDomain: ${GCP_REGION}-a
      version: ${KUBERNETES_VERSION}
      bootstrap:
        configRef:
          name: ${CLUSTER_NAME}-workers
          apiVersion: bootstrap.cluster.x-k8s.io/v1alpha3
          kind: TalosConfigTemplate
      infrastructureRef:
        name: ${CLUSTER_NAME}-workers
        apiVersion: infrastructure.cluster.x-k8s.io/v1beta1
        kind: GCPMachineTemplate
---
kind: GCPMachineTemplate
apiVersion: infrastructure.cluster.x-k8s.io/v1beta1
metadata:
  name: ${CLUSTER_NAME}-workers
spec:
  template:
    spec:
      instanceType: ${GCP_NODE_MACHINE_TYPE}
      image: ${GCP_NODE_IMAGE_ID}
      serviceAccounts:
        email: ${GCP_VM_SVC_ACCOUNT}
        scopes:
          - "https://www.googleapis.com/auth/compute"
      publicIP: true
      rootDeviceSize: ${GCP_NODE_VOL_SIZE}
---
kind: TalosConfigTemplate
apiVersion: bootstrap.cluster.x-k8s.io/v1alpha3
metadata:
  name: ${CLUSTER_NAME}-workers
spec:
  template:
    spec:
      generateType: join
      talosVersion: ${TALOS_VERSION}
---
## Health check for workers
kind: MachineHealthCheck
apiVersion: cluster.x-k8s.io/v1alpha4
metadata:
  name: ${CLUSTER_NAME}-worker-hc
spec:
  clusterName: ${CLUSTER_NAME}
  maxUnhealthy: 40%
  nodeStartupTimeout: 20m
  selector:
    matchLabels:
      nodepool: nodepool-a
  unhealthyConditions:
    - type: Ready
      status: Unknown
      timeout: 300s
    - type: Ready
      status: "False"
      timeout: 300s